name: üîß Debug Event Sync

on:
  workflow_dispatch:
    inputs:
      debug_level:
        description: 'Debug verbosity level'
        required: false
        default: 'basic'
        type: choice
        options:
        - basic
        - detailed
        - full

jobs:
  debug-environment:
    runs-on: self-hosted
    name: üîç Debug Sync Environment
    
    steps:
    - name: üîÑ Checkout Repository
      uses: actions/checkout@v4
      
    - name: üîç Basic Environment Check
      run: |
        echo "üñ•Ô∏è  System Information:"
        echo "===================="
        echo "Working directory: $(pwd)"
        echo "User: $(whoami)"
        echo "Python version: $(python3 --version)"
        echo "Git branch: $(git branch --show-current)"
        echo "Git commit: $(git rev-parse --short HEAD)"
        echo ""
        
        echo "üìÅ Directory Structure:"
        echo "====================="
        ls -la scripts/event-sync/ | head -10
        echo ""
        
        echo "üîê Environment Variables:"
        echo "========================"
        echo "GANCIO_EMAIL: ${GANCIO_EMAIL:-'‚ùå NOT SET'}"
        echo "GANCIO_PASSWORD: ${GANCIO_PASSWORD:+‚úÖ SET}" 
        echo "GANCIO_PASSWORD: ${GANCIO_PASSWORD:-'‚ùå NOT SET'}" | sed 's/GANCIO_PASSWORD: .*/GANCIO_PASSWORD: ‚ùå NOT SET/'
        echo "DISCORD_WEBHOOK_URL: ${DISCORD_WEBHOOK_URL:+‚úÖ SET}"
        echo "DISCORD_WEBHOOK_URL: ${DISCORD_WEBHOOK_URL:-'‚ùå NOT SET'}" | sed 's/DISCORD_WEBHOOK_URL: .*/DISCORD_WEBHOOK_URL: ‚ùå NOT SET/'
        echo ""
        
    - name: üêç Python Environment Check
      run: |
        echo "üêç Python Environment:"
        echo "====================="
        which python3
        cd scripts/event-sync
        
        echo "Virtual environment status:"
        if [ -d "venv" ]; then
          echo "‚úÖ venv directory exists"
          ls -la venv/bin/ | grep -E "(python|pip|activate)" || echo "‚ùå Missing expected executables"
        else
          echo "‚ùå venv directory missing"
        fi
        
        echo ""
        echo "Python packages (system):"
        python3 -m pip list | grep -E "(requests|beautifulsoup4|selenium)" || echo "‚ùå Missing required packages"
        
    - name: üåê Network & Service Check
      run: |
        echo "üåê Network & Services:"
        echo "====================="
        
        echo "Gancio service status:"
        systemctl is-active gancio 2>/dev/null && echo "‚úÖ Gancio service is active" || echo "‚ùå Gancio service not active"
        
        echo "Port 13120 status:"
        ss -tuln | grep :13120 && echo "‚úÖ Port 13120 is listening" || echo "‚ùå Port 13120 not available"
        
        echo "HTTP connectivity test:"
        if curl -s --connect-timeout 5 http://localhost:13120 >/dev/null 2>&1; then
          echo "‚úÖ Gancio web interface accessible"
          curl -s http://localhost:13120/api/events 2>/dev/null | head -c 100 && echo "..." || echo "‚ùå API not responding"
        else
          echo "‚ùå Cannot connect to http://localhost:13120"
        fi
        echo ""
        
    - name: üìù Detailed Debug (if requested)
      if: ${{ github.event.inputs.debug_level == 'detailed' || github.event.inputs.debug_level == 'full' }}
      run: |
        cd scripts/event-sync
        
        echo "üìù Detailed Debug Information:"
        echo "============================="
        
        echo "Recent sync files:"
        ls -la *.json *.txt 2>/dev/null | tail -5 || echo "No recent files found"
        echo ""
        
        echo "Sync summary (if exists):"
        if [ -f "sync_summary.txt" ]; then
          echo "--- sync_summary.txt ---"
          head -20 sync_summary.txt
          echo "--- end sync_summary.txt ---"
        else
          echo "No sync_summary.txt found"
        fi
        echo ""
        
        echo "Event files status:"
        for file in willspub_events.json combined_events.json conduit_events.json; do
          if [ -f "$file" ]; then
            echo "‚úÖ $file exists ($(wc -l < $file) lines)"
          else
            echo "‚ùå $file missing"
          fi
        done
        
    - name: üîß Full Debug & Test Run (if requested)
      if: ${{ github.event.inputs.debug_level == 'full' }}
      env:
        GANCIO_EMAIL: ${{ secrets.GANCIO_EMAIL }}
        GANCIO_PASSWORD: ${{ secrets.GANCIO_PASSWORD }}
        GANCIO_URL: http://localhost:13120
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: |
        cd scripts/event-sync
        
        echo "üîß Full Debug Test:"
        echo "=================="
        
        if [ -d "venv" ]; then
          echo "Activating virtual environment..."
          source venv/bin/activate
          
          echo "Testing script execution (dry run)..."
          timeout 30s python3 -c "
import requests
import sys
import os

# Test basic imports
try:
    from enhanced_multi_venue_sync import scrape_willspub_events
    print('‚úÖ Enhanced multi venue sync import successful')
except Exception as e:
    print(f'‚ùå Import failed: {e}')

# Test Gancio connection
try:
    response = requests.get('http://localhost:13120/api/events', timeout=5)
    if response.status_code == 200:
        events = response.json()
        print(f'‚úÖ Gancio API accessible, found {len(events)} events')
    else:
        print(f'‚ùå Gancio API returned status {response.status_code}')
except Exception as e:
    print(f'‚ùå Gancio connection failed: {e}')

# Test environment variables
email = os.getenv('GANCIO_EMAIL')
password = os.getenv('GANCIO_PASSWORD')
if email and password:
    print('‚úÖ Required environment variables are set')
else:
    print('‚ùå Missing required environment variables')
    
print('üéØ Dry run completed successfully')
" 2>&1 || echo "‚ùå Test script failed or timed out"
          
        else
          echo "‚ùå Cannot run test - virtual environment missing"
        fi
        
    - name: üìä Summary
      if: always()
      run: |
        echo ""
        echo "üéØ Debug Summary:"
        echo "================"
        echo "This debug workflow helps identify issues with the GitHub Actions environment."
        echo "Check the output above for any ‚ùå markers indicating problems."
        echo ""
        echo "Common fixes:"
        echo "‚Ä¢ Ensure secrets are configured in repository settings"
        echo "‚Ä¢ Verify Gancio service is running on the self-hosted runner"
        echo "‚Ä¢ Check virtual environment is properly set up"
        echo "‚Ä¢ Confirm network connectivity to localhost:13120"
        echo ""
        echo "Next steps:"
        echo "‚Ä¢ Run 'basic' debug first, then 'detailed' or 'full' as needed"
        echo "‚Ä¢ Compare with local environment where script works"
        echo "‚Ä¢ Check runner service logs if needed"
