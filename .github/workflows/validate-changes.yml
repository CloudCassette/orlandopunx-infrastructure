name: 🔍 Validate Orlando Punk Shows Changes

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    name: 🧪 Test and Validate Changes
    
    steps:
    - name: 🔄 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔍 Validate SEO Files
      run: |
        echo "🔍 Validating SEO files..."
        
        # Check if sitemap.xml exists and has basic structure
        if [ -f "seo/sitemap.xml" ]; then
          echo "✅ Sitemap file exists"
          if grep -q "<?xml" seo/sitemap.xml && grep -q "urlset" seo/sitemap.xml; then
            echo "✅ Sitemap has basic XML structure"
          else
            echo "❌ Sitemap XML structure appears invalid"
            exit 1
          fi
        fi
        
        # Check robots.txt format
        if [ -f "seo/robots.txt" ]; then
          echo "✅ Robots.txt file exists"
          if grep -q "Sitemap:" seo/robots.txt; then
            echo "✅ Robots.txt contains sitemap reference"
          else
            echo "⚠️  Robots.txt missing sitemap reference"
          fi
        fi
        
        echo "✅ SEO validation completed"

    - name: 🎨 Validate Assets
      run: |
        echo "🎨 Validating assets..."
        
        # Check favicon exists
        if [ -f "icons8-poster-64.png" ]; then
          echo "✅ Favicon found"
          # Check file size (should be reasonable for a 64x64 PNG)
          size=$(stat -c%s "icons8-poster-64.png")
          if [ $size -gt 100 ] && [ $size -lt 10000 ]; then
            echo "✅ Favicon size looks reasonable ($size bytes)"
          else
            echo "⚠️  Favicon size seems unusual ($size bytes)"
          fi
        fi
        
        # List CSS files
        echo "CSS files found:"
        find . -name "*.css" -type f | head -10

    - name: 🛠️ Validate Scripts
      run: |
        echo "🛠️ Validating scripts..."
        
        # Check shell scripts exist and are executable
        script_count=0
        for script in $(find . -name "*.sh" -type f); do
          echo "Checking script: $script"
          if [ -x "$script" ] || chmod +x "$script"; then
            echo "  ✅ Script is/made executable"
            # Basic syntax check
            if bash -n "$script"; then
              echo "  ✅ Script syntax is valid"
            else
              echo "  ❌ Script syntax error in $script"
              exit 1
            fi
          else
            echo "  ❌ Cannot make script executable: $script"
            exit 1
          fi
          script_count=$((script_count + 1))
        done
        
        echo "✅ Validated $script_count shell scripts"

    - name: 📚 Validate Documentation
      run: |
        echo "📚 Validating documentation..."
        
        # Check that key documentation files exist
        required_docs=("README.md" "CONTRIBUTING.md")
        
        for doc in "${required_docs[@]}"; do
          if [ -f "$doc" ]; then
            echo "✅ $doc exists"
            # Check file is not empty
            if [ -s "$doc" ]; then
              echo "  ✅ $doc is not empty"
            else
              echo "  ❌ $doc is empty"
              exit 1
            fi
          else
            echo "❌ Missing required documentation: $doc"
            exit 1
          fi
        done
        
        # Check docs directory
        if [ -d "docs" ]; then
          doc_count=$(find docs -name "*.md" | wc -l)
          echo "✅ Found $doc_count documentation files in docs/"
        fi

    - name: 🔐 Basic Security Check
      run: |
        echo "🔐 Running basic security checks..."
        
        # Check for obvious secrets in non-template files
        if find . -name "*.json" -not -name "*.template" -not -path "./.git/*" -exec grep -l "password" {} \; | grep -v node_modules; then
          echo "⚠️  Found 'password' in JSON files - please review"
        else
          echo "✅ No obvious password leaks in JSON files"
        fi
        
        # Check that template files exist for sensitive configs
        if [ -f "configs/gancio/config.json.template" ]; then
          echo "✅ Gancio config template exists"
        fi
        
        echo "✅ Basic security check completed"

    - name: 📋 Summary
      run: |
        echo "🎸 Orlando Punk Shows - Validation Summary"
        echo "========================================"
        echo "✅ All validation checks passed!"
        echo "🚀 Changes are ready for deployment"
        echo ""
        echo "Repository structure:"
        echo "📁 $(find . -name "*.md" | wc -l) documentation files"
        echo "🔧 $(find . -name "*.sh" | wc -l) shell scripts" 
        echo "⚙️  $(find . -name "*.yml" -o -name "*.yaml" | wc -l) configuration files"
        echo "🎨 $(find . -name "*.css" | wc -l) style files"
        echo "🖼️  $(find . -name "*.png" -o -name "*.jpg" -o -name "*.gif" | wc -l) image files"
        echo ""
        echo "🎸 Ready to rock the Orlando punk scene! 🤘"
