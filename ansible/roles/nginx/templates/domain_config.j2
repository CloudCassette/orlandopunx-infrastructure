# {{ item.key | title }} - Nginx Configuration for Cloudflare Tunnel
# Managed by Ansible - Do not edit manually

server {
    listen 80;
    server_name {{ item.value.server_name }};
    
    # Increase max body size for file uploads
    client_max_body_size 50M;
    
{% if item.value.tunnel_enabled %}
    # Trust Cloudflare tunnel IPs for real visitor IP
{% for ip in cloudflare_tunnel_ips %}
    set_real_ip_from {{ ip }};
{% endfor %}
    real_ip_header CF-Connecting-IP;
{% endif %}
    
    # Security headers (Cloudflare handles SSL/TLS)
{% for header in security_headers %}
    {{ header }};
{% endfor %}
    
    # Reverse proxy to {{ item.value.service }}
    location / {
        proxy_pass {{ item.value.proxy_pass }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
        
        # Cloudflare tunnel headers
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-RAY $http_cf_ray;
        proxy_set_header CF-Visitor $http_cf_visitor;
        proxy_set_header CF-IPCountry $http_cf_ipcountry;
        
{% if item.value.service == "ghost" %}
        # Ghost-specific timeout settings
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
{% endif %}
    }
    
    # Static files optimization
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        proxy_pass {{ item.value.proxy_pass }};
        proxy_set_header Host $host;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    }
    
    # SEO files
    location = /sitemap.xml {
        proxy_pass {{ item.value.proxy_pass }};
        add_header Cache-Control "public, max-age=3600";
    }
    
    location = /robots.txt {
        proxy_pass {{ item.value.proxy_pass }};
        add_header Cache-Control "public, max-age=3600";
    }
    
{% if item.value.service == "ghost" %}
    # Ghost-specific endpoints
    location = /feed/rss {
        proxy_pass {{ item.value.proxy_pass }};
        add_header Cache-Control "public, max-age=1800";
        add_header Content-Type "application/rss+xml";
    }
    
    # Ghost API endpoints
    location /ghost/api/ {
        proxy_pass {{ item.value.proxy_pass }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;  # Always HTTPS with Cloudflare
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
    
    # Ghost admin panel
    location /ghost/ {
        proxy_pass {{ item.value.proxy_pass }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;  # Always HTTPS with Cloudflare
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
    }
{% endif %}

{% if item.value.service == "gancio" %}
    # Gancio API endpoints
    location /api/ {
        proxy_pass {{ item.value.proxy_pass }};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
{% endif %}
    
    # Health check endpoint
    location = /health {
        proxy_pass {{ item.value.proxy_pass }};
        access_log off;
    }
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(sql|sqlite|db)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Logging
    access_log {{ nginx_log_path }}/{{ item.value.log_prefix }}_access.log;
    error_log {{ nginx_log_path }}/{{ item.value.log_prefix }}_error.log;
}
